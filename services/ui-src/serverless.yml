
service: ui-src

plugins:
  - serverless-plugin-scripts
  - serverless-s3-sync
  - serverless-cloudfront-invalidate
custom:
  stage: ${opt:stage, self:provider.stage}
  api_region: ${cf:app-api-${self:custom.stage}.Region}
  api_url: ${cf:app-api-${self:custom.stage}.ApiGatewayRestApiUrl}
  cognito_region: ${cf:ui-auth-${self:custom.stage}.Region}
  cognito_identity_pool_id: ${cf:ui-auth-${self:custom.stage}.IdentityPoolId}
  cognito_user_pool_id: ${cf:ui-auth-${self:custom.stage}.UserPoolId}
  cognito_client_id: ${cf:ui-auth-${self:custom.stage}.UserPoolClientId}
  s3_attachments_bucket_region: ${cf:uploads-${self:custom.stage}.Region}
  s3_attachments_bucket_name: ${cf:uploads-${self:custom.stage}.AttachmentsBucketName}
  ui_s3_bucket_name: ${cf:ui-${self:custom.stage}.S3BucketName}
  ui_cloudfront_distribution_id: ${cf:ui-${self:custom.stage}.CloudFrontDistributionId}

  s3Sync:
    - bucketName: ${self:custom.ui_s3_bucket_name}
      localDir: ./build
      deleteRemoved: true

  cloudfrontInvalidate:
    distributionId: ${self:custom.ui_cloudfront_distribution_id}
    items:
      - "/*"

  scripts:
    hooks:
      # Build the static archive and populate the config
      package:initialize: |
        set -e
        yarn run build
        export API_REGION=${self:custom.api_region}
        export API_URL=${self:custom.api_url}
        export COGNITO_REGION=${self:custom.cognito_region}
        export COGNITO_IDENTITY_POOL_ID=${self:custom.cognito_identity_pool_id}
        export COGNITO_USER_POOL_ID=${self:custom.cognito_user_pool_id}
        export COGNITO_CLIENT_ID=${self:custom.cognito_client_id}
        export S3_ATTACHMENTS_BUCKET_REGION=${self:custom.s3_attachments_bucket_region}
        export S3_ATTACHMENTS_BUCKET_NAME=${self:custom.s3_attachments_bucket_name}
        ./env.sh
        cp public/env-config.js build/env-config.js

# The `provider` block defines where your service will be deployed
provider:
  name: aws
  runtime: nodejs12.x
  region: us-east-1
  stage: dev
